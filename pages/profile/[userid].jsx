import { useRouter } from "next/router";
import React from "react";
import { useEffect, useState, useCallback } from "react";
import Link from "next/link";
import { app, database, storage } from "../../firebaseConfig";
import {
  collection,
  getDocs,
  doc,
  updateDoc,
  deleteDoc,
} from "firebase/firestore";
import { getAuth, updateProfile, deleteUser } from "firebase/auth";
import { MuiNavbar } from "../../layouts/components/MuiNavbar";
import Button from "@mui/material/Button";
import Box from "@mui/material/Box";
import TextField from "@mui/material/TextField";
import Head from "next/head";
import Image from "react-image-resizer";
import Avatar from "@mui/material/Avatar";

const Post = () => {
  const [ID, setID] = useState(null);
  const [context, setContext] = useState("");
  const [file, setFile] = useState("");
  const [categori, setCategori] = useState("");
  const [photoURL, setPhotoURL] = useState();
  const [title1, setTitle1] = useState("");
  const [users, setUsers] = useState(null);
  const [displayName, setDisplayName] = useState("");
  const [createtime, setCreatetime] = useState("");
  const [isUpdate, setIsUpdate] = useState(false);
  const [posttitle, setPostTitle] = useState("");
  const databaseRef = collection(database, "CRUD DATA");
  //データベースを取得
  const [createObjectURL, setCreateObjectURL] = useState(null);
  const [firedata, setFiredata] = useState([]);
  const [downloadURL, setDownloadURL] = useState(null);
  const [likecount, setLikecount] = useState(0);
  const usersRef = collection(database, "users");
  const [image, setImage] = useState("");
  const [result, setResult] = useState("");
  const [email, setEmail] = useState("");
  const [netabare, setNetabare] = useState("");
  const [likes, setLikes] = useState(null);
  const [selected, setSelected] = useState(["最終回"]);

  const styles = { whiteSpace: "pre-line" };
  let router = useRouter();
  const { userid } = router.query;
  const auth = getAuth();
  const user = auth.currentUser;
  const [searchName, setSearchName] = useState("");

  console.log({ userid });

  // const getData = async () => {
  //   //firestoreからデータ取得
  //   await getDocs(databaseRef).then((response) => {
  //     //コレクションのドキュメントを取得
  //     setFiredata(
  //       response.docs
  //         .map((data) => {
  //           //配列なので、mapで展開する
  //           return { ...data.data(), id: data.id };
  //           //スプレッド構文で展開して、新しい配列を作成
  //         })
  //         .filter((data) => {
  //           if (data.id === id) {
  //             return data;
  //             //そのまま返す
  //           } else if (
  //             data.id.toLowerCase().includes(id)
  //             //valのnameが含んでいたら小文字で返す　含んでいないvalは返さない
  //           ) {
  //             return data;
  //           }
  //         })
  //     );
  //   });
  // };

  useEffect(() => {
    // getData();
    usersData();
  }, [likes]);

  const usersData = async () => {
    //firestoreからデータ取得
    await getDocs(usersRef).then((response) => {
      //コレクションのドキュメントを取得
      setUsers(
        response.docs.map((data) => {
          //配列なので、mapで展開する
          return { ...data.data(), id: data.id };
          //スプレッド構文で展開して、新しい配列を作成
        })
      );
    });
  };

  return (
    <>
      <Head>
        <title>Manga Study</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MuiNavbar />

      <div className="max-w-7xl m-auto">
        <>
          {users &&
            users.map((user) => {
              return (
                <>
                  {userid == user.userid && (
                    <>
                      <h2 className="m-5 my-12 text-center text-2xl font-semibold">
                        {user.username} さんのプロフィール
                      </h2>
                      <div key={user.id}>
                        <p>
                          <Image
                            className="m-auto text-center max-w-sm"
                            height={100}
                            width={100}
                            src={user.profileimage}
                          />
                        </p>
                        <p className="m-5">名前：{user.username}</p>
                        <p className="m-5">プロフィール：{user.bio}</p>
                        <p className="m-5">好きな漫画：{user.favarite}</p>
                      </div>
                    </>
                  )}
                  <p></p>
                </>
              );
            })}
        </>
      </div>
    </>
  );
};

export default Post;
